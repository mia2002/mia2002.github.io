<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
    xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
    <channel>
        <atom:link href="rss" rel="self" type="application/rss+xml" />
        
        <title><![CDATA[Welcome to Yan's Blog]]></title>
        <link>http://mia2002.cn</link>
        <description><![CDATA[What wakes you up every morning is not the bell,but your dream!!]]></description>
        
        
        <language>en-uk</language>
        <managingEditor><![CDATA[Yan]]></managingEditor>
        
<item>
    <title><![CDATA[C回调Java方法]]></title>
    <link>http://mia2002.cn/blog/jni-recall-java</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-08-25T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/jni-recall-java]]></guid>
    <description><![CDATA[注意：C回调Java方法是通过反射来实现的。

C反射步骤与java反射基本一致。

Java的反射示例代码：
//先找到class
Class clazz = Class.forName(&quot;package.TestModel&quot;);
//找到方法
Method method = clazz.getMethod(&quot;methodName&quot;,String.c...]]></description>
</item>

<item>
    <title><![CDATA[我的第一个JNI应用]]></title>
    <link>http://mia2002.cn/blog/first-jni-demo</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-08-22T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/first-jni-demo]]></guid>
    <description><![CDATA[环境准备

Android Studio已安装NDK。



配置ndk-build的环境变量

Windows环境变量配置


新建系统变量





找到Path系统变量，添加 %NDK_HOME%;





保存，打开cmd终端，输入ndk-build测试




看到如图所示提示，即表示环境变量配置成功。

Mac环境变量配置


使用vim或者nano修改~/.bash_prof...]]></description>
</item>

<item>
    <title><![CDATA[如何解决if else多层嵌套]]></title>
    <link>http://mia2002.cn/blog/if-else</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-08-04T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/if-else]]></guid>
    <description><![CDATA[前言

在进入正题前请允许我啰嗦几句，其实这篇文章我在上一年就想写了，但是拖延症发作，一直拖到今天。

if...else我们都很熟悉，并且应该也是写逻辑代码用得最多的，我的大学java老师在讲if else语句的时候和我们说过if else嵌套应尽量保持不超过3层，这句话，我一直记住了，但是在实际写代码中，我是尽量保持在最多两层嵌套，大多数情况下，我是保持在一层判断。

有人也许会觉得多层...]]></description>
</item>

<item>
    <title><![CDATA[System.getProperty()]]></title>
    <link>http://mia2002.cn/blog/System-getProperty</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-07-20T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/System-getProperty]]></guid>
    <description><![CDATA[使用Java提供的System.getProperty()方法可以获取JVM以及操作系统的一些参数。



参数名
描述



java.version
Java的运行时环境版本


java.vendor
Java 运行时环境供应商


java.vendor.url
Java 供应商的 URL


java.home
Java 安装目录


java.vm.specification.v...]]></description>
</item>

<item>
    <title><![CDATA[DecorView]]></title>
    <link>http://mia2002.cn/blog/DecorView</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-06-15T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/DecorView]]></guid>
    <description><![CDATA[
DecorView为整个Window界面的最顶层View
DecorView只有一个子元素为LinearLayout，代表整个Window界面，包含通知栏，标题栏，内容显示栏三块区域。
LinearLayout里有两个FrameLayout子元素。


第3点提到的两个FrameLayout分别为标题栏显示界面和内容栏显示界面。


标题栏显示界面：只有一个TextView显示应用的名称。...]]></description>
</item>

<item>
    <title><![CDATA[Ruby使用Socket处理Http请求]]></title>
    <link>http://mia2002.cn/blog/ruby-socket</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-03-24T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/ruby-socket]]></guid>
    <description><![CDATA[1 引言

经过了一周的ruby学习后，为了让ruby基础得到巩固，我用socket写了一个处理http请求的gem包，我也不知道是否已经有大神完成类似功能的gem包，也不清楚我写的这个服务有什么实际的作用，但这个项目只是作为练手。

首先要吐槽一下的是，这个项目虽然代码量不是很多，但是对一个ruby初学者来说，全程用sublime来写还是蛮累的，本来是想用RubyMine的，但是我之前找到...]]></description>
</item>

<item>
    <title><![CDATA[GetoptLong简单例子]]></title>
    <link>http://mia2002.cn/blog/ruby-getoptlong</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Mon, 20 Mar 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-03-20T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/ruby-getoptlong]]></guid>
    <description><![CDATA[1 GetoptLong

GetoptLong主要是用来处理命令行参数。

示例代码：
require &#39;getoptlong&#39;

opts=GetoptLong.new(
    [&#39;--dir&#39;,&#39;-d&#39;,GetoptLong::REQUIRED_ARGUMENT],
    [&#39;--num&#39;,&#39;-n&#39;,G...]]></description>
</item>

<item>
    <title><![CDATA[JMeter接口自动化测试]]></title>
    <link>http://mia2002.cn/blog/jmeter-auto</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Thu, 23 Feb 2017 00:00:00 +0000</pubDate>
    <dc:date>2017-02-23T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/jmeter-auto]]></guid>
    <description><![CDATA[1 引言

1.1 JMeter介绍

Apache JMeter是开源软件，它可以用来做负载测试和性能测试。它最初设计是用来测试Web应用程序，但现已扩展到其他测试功能。

Apache JMeter可以用来测试包括基于静态和动态资源程序的性能，例如静态文件，Java Servlets，Java对象，数据库，FTP服务器等等。Jmeter可以模拟一个在服务器、网络或者对象上大的负载来测试或...]]></description>
</item>

<item>
    <title><![CDATA[How to install JDK]]></title>
    <link>http://mia2002.cn/blog/how-to-install-jdk</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-12-05T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/how-to-install-jdk]]></guid>
    <description><![CDATA[Ubuntu

1.官网下载JDK

地址：http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html



这里我下载的是jdk8，注意勾选上Accept License Agreement。

2.解压缩



3.拷贝JDK

把文件拷贝到~/opt文件夹下。

先进去这个路径中...]]></description>
</item>

<item>
    <title><![CDATA[Weblogic ClassCastException]]></title>
    <link>http://mia2002.cn/blog/weblogic-ClassCastException</link>
    <author><![CDATA[Yan]]></author>
    <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
    <dc:date>2016-05-23T00:00:00+00:00</dc:date>
    <guid><![CDATA[/blog/weblogic-ClassCastException]]></guid>
    <description><![CDATA[今天手贱不小心用了超级管理员帐号去开启weblogic，导致后面用回IDE上配置的weblogic server启动失败。失败报错信息如下：
java.lang.ClassCastException: com.octetstring.vde.backend.BackendRoot cannot be cast to com.octetstring.vde.backend.standard.B...]]></description>
</item>


    </channel>
</rss>
